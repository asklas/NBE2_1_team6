Index: gc-coffee/src/test/java/edu/example/gccoffee/repository/OrderRepositoryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.example.gccoffee.repository;\r\n\r\nimport edu.example.gccoffee.entity.Order;\r\nimport edu.example.gccoffee.entity.OrderStatus;\r\nimport lombok.extern.log4j.Log4j2;\r\nimport org.junit.jupiter.api.MethodOrderer;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.junit.jupiter.api.TestMethodOrder;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport org.springframework.transaction.annotation.Propagation;\r\nimport org.springframework.transaction.annotation.Transactional;\r\n\r\nimport java.util.Optional;\r\nimport java.util.SortedSet;\r\nimport java.util.stream.IntStream;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\n@SpringBootTest\r\n@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)\r\n@Transactional(propagation = Propagation.NOT_SUPPORTED)\r\n@Log4j2\r\n@TestMethodOrder(MethodOrderer.OrderAnnotation.class)\r\npublic class OrderRepositoryTest {\r\n    @Autowired\r\n    private OrderRepository orderRepository;\r\n\r\n    @Test\r\n    @org.junit.jupiter.api.Order(1)\r\n    public void testInsert() {\r\n        IntStream.rangeClosed(1, 5).forEach(i -> {\r\n            Order order = Order.builder()\r\n                                .email(\"user\" + i + \"@gmail.com\")\r\n                                .address(\"Busan\")\r\n                                .postCode(25342)\r\n                                .orderStatus( i > 3 ? OrderStatus.DELIVERING : OrderStatus.NOT_DELIVERY)\r\n                                .build();\r\n\r\n            //WHEN - 엔티티 저장\r\n            Order savedOrder = orderRepository.save(order);\r\n\r\n            //THEN\r\n            assertNotNull(savedOrder);\r\n            assertEquals(i, savedOrder.getOrderId());\r\n        });\r\n    }\r\n\r\n    @Test\r\n    @org.junit.jupiter.api.Order(2)\r\n    public void testRead() {\r\n        Long orderId = 1L;\r\n\r\n        Optional<Order> order = orderRepository.findById(orderId);\r\n\r\n        log.info(order.isPresent());\r\n        assertNotNull(order);\r\n        assertEquals(orderId, order.get().getOrderId());\r\n    }\r\n\r\n    @Test\r\n    @org.junit.jupiter.api.Order(3)\r\n    public void testUpdate() {\r\n        Long orderId = 1L;\r\n        String address = \"변경 주문\";\r\n        String email = \"변경@gmail.com\";\r\n\r\n\r\n        Optional<Order> order = orderRepository.findById(orderId);\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gc-coffee/src/test/java/edu/example/gccoffee/repository/OrderRepositoryTest.java b/gc-coffee/src/test/java/edu/example/gccoffee/repository/OrderRepositoryTest.java
--- a/gc-coffee/src/test/java/edu/example/gccoffee/repository/OrderRepositoryTest.java	
+++ b/gc-coffee/src/test/java/edu/example/gccoffee/repository/OrderRepositoryTest.java	
@@ -66,7 +66,6 @@
         String address = "변경 주문";
         String email = "변경@gmail.com";
 
-
         Optional<Order> order = orderRepository.findById(orderId);
 
     }
Index: gc-coffee/src/main/java/edu/example/gccoffee/entity/Order.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.example.gccoffee.entity;\r\n\r\nimport jakarta.persistence.*;\r\nimport lombok.*;\r\nimport org.springframework.data.annotation.CreatedDate;\r\nimport org.springframework.data.jpa.domain.support.AuditingEntityListener;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.util.List;\r\n\r\n@Entity\r\n@Table(name= \"orders\")\r\n@Getter\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\n@Builder\r\n@ToString\r\n@EntityListeners(AuditingEntityListener.class)\r\npublic class Order {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long orderId;\r\n\r\n    private String email;\r\n\r\n    private String address;\r\n\r\n    private int postCode;\r\n\r\n    @OneToMany(mappedBy = \"order\", fetch = FetchType.EAGER)\r\n    private List<OrderItem> orderItem;\r\n\r\n    @Enumerated(value = EnumType.STRING)\r\n    private OrderStatus orderStatus;\r\n\r\n    @CreatedDate\r\n    private LocalDateTime createAt;\r\n\r\n    public void changeAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    public void changePostCode(int postCode) {\r\n        this.postCode = postCode;\r\n    }\r\n\r\n    public void changeEmail(String email) {\r\n        this.email = email;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gc-coffee/src/main/java/edu/example/gccoffee/entity/Order.java b/gc-coffee/src/main/java/edu/example/gccoffee/entity/Order.java
--- a/gc-coffee/src/main/java/edu/example/gccoffee/entity/Order.java	
+++ b/gc-coffee/src/main/java/edu/example/gccoffee/entity/Order.java	
@@ -36,6 +36,12 @@
     @CreatedDate
     private LocalDateTime createAt;
 
+    public void addItems(Long orderItemId){
+        OrderItem orderItem = OrderItem.builder().orderItemId(orderItemId)
+                .build();
+        images.add(productImage);
+    }
+
     public void changeAddress(String address) {
         this.address = address;
     }
Index: gc-coffee/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=gc-coffee\r\nspring.datasource.url=jdbc:mysql://localhost:3306/coffee\r\nspring.datasource.username=root\r\nspring.datasource.password=1q2w3e\r\n\r\nspring.jpa.hibernate.ddl-auto=update
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gc-coffee/src/main/resources/application.properties b/gc-coffee/src/main/resources/application.properties
--- a/gc-coffee/src/main/resources/application.properties	
+++ b/gc-coffee/src/main/resources/application.properties	
@@ -1,6 +1,6 @@
 spring.application.name=gc-coffee
 spring.datasource.url=jdbc:mysql://localhost:3306/coffee
 spring.datasource.username=root
-spring.datasource.password=1q2w3e
+spring.datasource.password=0372
 
 spring.jpa.hibernate.ddl-auto=update
\ No newline at end of file
Index: gc-coffee/src/main/java/edu/example/gccoffee/repository/search/OrderItemSearchImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.example.gccoffee.repository.search;\r\n\r\nimport com.querydsl.jpa.impl.JPAQueryFactory;\r\nimport lombok.RequiredArgsConstructor;\r\n\r\n@RequiredArgsConstructor\r\npublic class OrderItemSearchImpl implements OrderItemsSearch {\r\n    private final JPAQueryFactory jpaQueryFactory;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gc-coffee/src/main/java/edu/example/gccoffee/repository/search/OrderItemSearchImpl.java b/gc-coffee/src/main/java/edu/example/gccoffee/repository/search/OrderItemSearchImpl.java
--- a/gc-coffee/src/main/java/edu/example/gccoffee/repository/search/OrderItemSearchImpl.java	
+++ b/gc-coffee/src/main/java/edu/example/gccoffee/repository/search/OrderItemSearchImpl.java	
@@ -4,6 +4,6 @@
 import lombok.RequiredArgsConstructor;
 
 @RequiredArgsConstructor
-public class OrderItemSearchImpl implements OrderItemsSearch {
+public class OrderItemSearchImpl implements OrderItemSearch {
     private final JPAQueryFactory jpaQueryFactory;
 }
